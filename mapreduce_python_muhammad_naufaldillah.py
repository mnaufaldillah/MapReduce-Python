# -*- coding: utf-8 -*-
"""MapReduce-Python-Muhammad Naufaldillah.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UX0A7OFor4AbHukHQcw1CJ-IdFtTeUlh

# Word Counting with Map Reduce Python

## Import The Required Libraries
"""

import sys;
from itertools import groupby;

"""## Map Function"""

def mapFunction(words):
  # removing punctuation and spaces.
  cleanWord = ''.join([i for i in words if i.isalpha()])
  return [cleanWord,1];

"""## Reduce Funtion"""

def reduceFunction(key, values):
  counts = [x[1] for x in values];
  return [key,sum(counts)];

"""## Download the data"""

!wget https://www.gutenberg.org/cache/epub/1777/pg1777.txt -O romeojuliet.txt

"""## Splitting the document into single word"""

with open("romeojuliet.txt") as f:
    words=[word for line in f for word in line.split()]

print(words)

"""## Mapping Result"""

mapResult = map(mapFunction, words)

"""## Sorting Map Result"""

mapResultSorted = sorted(mapResult, key = lambda x: x[0])

"""## Using reducer for each group of equal keys"""

reduceResult = [];
for k, g, in groupby(mapResultSorted, key = lambda x: x[0]):
  reduceResult.append(reduceFunction(k, list(g)))

"""## Printing the result"""

print(reduceResult)